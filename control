#!/bin/bash
#Auth:zp

WORKSPACE=$(cd $(dirname $0)/; pwd)
cd $WORKSPACE

mkdir -p logs

module=opsadmin
app=$module-ems
conf=cfg.json
pidfile=logs/app.pid
logfile=logs/all.log

function check_pid(){
    if [ -f $pidfile ];then
        pid=`cat $pidfile`
        if [ -n $pid ]; then
            running=`ps -p $pid | grep -v "PID TTY" |wc -l`
            return $running
        fi
    fi
    return 0
}

function start() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo -n "$app now is running already, pid="
        cat $pidfile
        return 1
    fi

    if ! [ -f $conf ];then
        echo "Config file $conf doesn't exist, creating one."
        cp cfg.example.json $conf
    fi
    nohup ./$app -c $conf &> $logfile &
    echo $! > $pidfile
    echo "$app started..., pid=$!"
}

function stop() {
    pid=`cat $pidfile`
    kill $pid
    echo "$app stoped..."
}

function restart() {
    stop
    sleep 1
    start
}

function status() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo started
    else
        echo stoped
    fi
}

function tailf() {
    tail -f $logfile
}

function build() {
    go build 
    if [ $? -ne 0 ]; then
        exit $?
    fi
    mv $module $app
    ./$app -v
}

function pack() {
    build
    #git log -1 --pretty=%h > gitversion
    version=`./$app -v`
    #file_list="public control cfg.example.json $app"
    file_list="control cfg.example.json $app"
    echo "...tar $app-$version.tar.gz <= $file_list"
    #tar zcf $app-$version.tar.gz gitversion $file_list
    tar zcf $app-$version.tar.gz  $file_list
}

function packbin() {
    build
    git log -1 --pretty=%h > gitversion
    version=`./$app -v`
    tar zcvf $app-bin-$version.tar.gz $app gitversion
}

function help() {
    echo "$0 build|pack|start|stop|restart|status|tail"
}

case "$1" in
	start)
	    start
	;;
	stop)
	    stop
	;;
        restart)
	    restart
	;;
        status)
	    status
	;;
        tail)
	    tailf
	;;
        build)
	    build
	;;
        pack)
	    pack
	;;
        packbin)
	    packbin
	;;
        *)
	    help
	;;
esac
